// Vercel serverless function entry point
import { readFileSync } from 'fs';
import { dirname, join } from 'path';
import { fileURLToPath } from 'url';
import getApp from '../dist/index.js';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

// Create app instance
const appPromise = getApp();

// Handler function for Vercel serverless
export default async function handler(req, res) {
  try {
    // Check if this is an API request
    if (!req.url.startsWith('/api/')) {
      // Non-API request - serve HTML directly
      const htmlPath = join(__dirname, '..', 'index.html');
      const htmlContent = readFileSync(htmlPath, 'utf-8');
      
      res.setHeader('Content-Type', 'text/html; charset=utf-8');
      res.setHeader('Cache-Control', 'public, max-age=0, must-revalidate');
      res.status(200).send(htmlContent);
      return;
    }

    // API request - use Express app
    const app = await appPromise;
    return app(req, res);
  } catch (error) {
    console.error('Handler error:', error);
    if (!req.url.startsWith('/api/')) {
      // Fallback HTML in case of error
      res.status(500).send('<html><body><h1>Site temporariamente indispon√≠vel</h1><p>Tente novamente em alguns instantes.</p></body></html>');
    } else {
      res.status(500).json({ error: 'Internal server error' });
    }
  }
}